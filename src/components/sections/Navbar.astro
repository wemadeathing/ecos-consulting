---
import Button from "@ui/Button.astro";
import { Image } from "astro:assets";
import logoLight from "../../assets/images/ecos-logo-light.png";
import logoDark from "../../assets/images/ecos-logo-dark.png";

const currentPath = Astro.url.pathname;

// Call-to-action configuration for the primary button
const primaryCTA = { text: "Contact", href: "/contact" };
---

<header
  id="main-header"
  class="fixed start-1/2 top-[30px] z-50 mx-auto flex w-[calc(100%-40px)] max-w-[calc(100%-40px)] -translate-x-1/2 transform flex-wrap rounded-2xl border-b border-transparent p-2 bg-transparent transition-all duration-300 sm:max-w-xl md:max-w-4xl md:flex-nowrap md:justify-start lg:max-w-5xl xl:max-w-6xl 2xl:max-w-[81rem]"
>
  <nav
    class="relative mx-auto w-full px-4 py-1 sm:px-6 lg:px-8 lg:flex lg:max-w-7xl lg:items-center lg:justify-between lg:gap-2 2xl:max-w-[85rem]"
  >
    <div class="flex items-center justify-between gap-x-1">
      <a
        class="flex-none focus:opacity-80 focus:outline-hidden"
        href="/"
        aria-label="ECOS Consulting"
      >
        <Image 
          id="logo-light"
          src={logoLight}
          alt="ECOS Consulting Logo" 
          width={170} 
          height={60} 
          class="w-auto h-11 block"
        />
        <Image 
          id="logo-dark"
          src={logoDark}
          alt="ECOS Consulting Logo" 
          width={170} 
          height={60} 
          class="w-auto h-11 hidden"
        />
      </a>

      <button
        type="button"
        class="hs-collapse-toggle relative flex size-9 items-center justify-center rounded-lg border border-slate-200/30 text-[12px] font-medium text-white hover:bg-white/10 focus:bg-white/10 focus:outline-hidden lg:hidden"
        id="hs-header-base-collapse"
        aria-expanded="false"
        aria-controls="hs-header-base"
        aria-label="Toggle navigation"
        data-hs-collapse="#hs-header-base"
      >
        <svg
          class="size-4 hs-collapse-open:hidden"
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          ><line x1="3" x2="21" y1="6" y2="6"></line><line
            x1="3"
            x2="21"
            y1="12"
            y2="12"></line><line x1="3" x2="21" y1="18" y2="18"></line></svg
        >
        <svg
          class="hidden size-4 shrink-0 hs-collapse-open:block"
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          ><path d="M18 6 6 18"></path><path d="m6 6 12 12"></path></svg
        >
        <span class="sr-only">Toggle navigation</span>
      </button>
    </div>

    <div
      id="hs-header-base"
      class="hs-collapse hidden grow basis-full overflow-hidden transition-all duration-300 lg:ml-12 lg:block 2xl:ml-20"
      aria-labelledby="hs-header-base-collapse"
    >
      <div class="max-h-[75vh] overflow-hidden overflow-y-auto">
        <div class="flex flex-col gap-0.5 py-2 lg:flex-row lg:items-center lg:gap-2 lg:py-0">
          <div class="grow">
            <div class="flex flex-col gap-0.5 lg:flex-row lg:items-center lg:justify-center lg:gap-6">
              <!-- Home Link -->
              <a
                href="/"
                class="nav-link flex items-center p-2 font-medium text-white transition-colors duration-200 hover:text-teal-300"
                aria-current={currentPath === "/" ? "page" : undefined}
              >
                Home
              </a>
              
              <!-- Services Dropdown -->
              <div class="hs-dropdown relative inline-flex">
                <button
                  id="services-dropdown"
                  type="button"
                  class="nav-link flex items-center p-2 font-medium text-white transition-colors duration-200 hover:text-teal-300"
                  aria-expanded="false"
                  aria-controls="services-menu"
                >
                  Services
                  <svg class="ml-1 size-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="m6 9 6 6 6-6"/>
                  </svg>
                </button>
                <div
                  id="services-menu"
                  class="hs-dropdown-menu duration mt-2 hidden min-w-[15rem] rounded-lg bg-white p-2 shadow-md transition-[opacity,margin] before:absolute before:-top-5 before:left-0 before:h-5 before:w-full"
                  aria-labelledby="services-dropdown"
                >
                  <a class="flex items-center gap-x-3.5 rounded-md px-3 py-2 text-sm text-slate-800 hover:bg-slate-100" href="/services/service-1">
                    SHE Management
                  </a>
                  <a class="flex items-center gap-x-3.5 rounded-md px-3 py-2 text-sm text-slate-800 hover:bg-slate-100" href="/services/service-2">
                    Facilities Management
                  </a>
                  <a class="flex items-center gap-x-3.5 rounded-md px-3 py-2 text-sm text-slate-800 hover:bg-slate-100" href="/services/service-3">
                    Environmental Services
                  </a>
                </div>
              </div>
              
              <!-- Case Studies Dropdown -->
              <div class="hs-dropdown relative inline-flex">
                <button
                  id="case-studies-dropdown"
                  type="button"
                  class="nav-link flex items-center p-2 font-medium text-white transition-colors duration-200 hover:text-teal-300"
                  aria-expanded="false"
                  aria-controls="case-studies-menu"
                >
                  Case Studies
                  <svg class="ml-1 size-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="m6 9 6 6 6-6"/>
                  </svg>
                </button>
                <div
                  id="case-studies-menu"
                  class="hs-dropdown-menu duration mt-2 hidden min-w-[15rem] rounded-lg bg-white p-2 shadow-md transition-[opacity,margin] before:absolute before:-top-5 before:left-0 before:h-5 before:w-full"
                  aria-labelledby="case-studies-dropdown"
                >
                  <a class="flex items-center gap-x-3.5 rounded-md px-3 py-2 text-sm text-slate-800 hover:bg-slate-100" href="/case-studies/study-1">
                    Manufacturing Industry
                  </a>
                  <a class="flex items-center gap-x-3.5 rounded-md px-3 py-2 text-sm text-slate-800 hover:bg-slate-100" href="/case-studies/study-2">
                    Construction Projects
                  </a>
                  <a class="flex items-center gap-x-3.5 rounded-md px-3 py-2 text-sm text-slate-800 hover:bg-slate-100" href="/case-studies/study-3">
                    Healthcare Facilities
                  </a>
                </div>
              </div>
              
              <!-- About Link -->
              <a
                href="/about"
                class="nav-link flex items-center p-2 font-medium text-white transition-colors duration-200 hover:text-teal-300"
                aria-current={currentPath === "/about" ? "page" : undefined}
              >
                About
              </a>
            </div>
          </div>
    
          <div class="mt-5 flex flex-wrap items-center gap-x-1.5 lg:ml-6 lg:mt-0">
            <Button
              href={primaryCTA.href}
              variant="primary"
              className="inline-flex text-nowrap border-none py-2! bg-teal-700 hover:bg-teal-600"
            >{primaryCTA.text}</Button>
          </div>
        </div>
      </div>
    </div>
  </nav>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    // Initialize Preline components
    const preline = import("preline/preline.js").then(module => {
      module.HSStaticMethods.autoInit();
    });
    
    // Handle scroll behavior for the header
    const header = document.getElementById('main-header');
    const logoLight = document.getElementById('logo-light');
    const logoDark = document.getElementById('logo-dark');
    const navLinks = document.querySelectorAll('.nav-link');
    const html = document.documentElement;
    
    // Track if any dropdown is open
    let dropdownOpen = false;
    
    // Monitor dropdowns
    document.addEventListener('click', (e) => {
      // Check if clicked element is a dropdown toggle
      const isDropdownToggle = e.target.closest('[aria-controls]');
      
      if (isDropdownToggle) {
        // Toggle dropdown state after a small delay to allow for animation
        setTimeout(() => {
          // Check if any dropdown is now open
          dropdownOpen = document.querySelector('[aria-expanded="true"]') !== null;
          
          // Disable scroll snap when dropdown is open
          if (dropdownOpen) {
            html.style.scrollSnapType = 'none';
          } else {
            html.style.scrollSnapType = 'y proximity';
          }
        }, 50);
      }
    });
    
    const handleScroll = () => {
      // Check if header element exists
      if (!header || !logoLight || !logoDark) return;
      
      if (window.scrollY > 50) {
        // When scrolled, add the blurred background and switch to dark theme
        header.classList.add('bg-white/70', 'backdrop-blur-md', 'shadow-md');
        header.classList.remove('bg-transparent', 'border-transparent');
        header.classList.add('border-slate-100');
        
        // Switch to dark logo
        logoLight.classList.add('hidden');
        logoLight.classList.remove('block');
        logoDark.classList.add('block');
        logoDark.classList.remove('hidden');
        
        // Change navigation text colors to dark
        navLinks.forEach(link => {
          link.classList.remove('text-white', 'hover:text-teal-300');
          link.classList.add('text-slate-800', 'hover:text-teal-700');
        });
      } else {
        // When at the top, return to transparent and light theme
        header.classList.remove('bg-white/70', 'backdrop-blur-md', 'shadow-md', 'border-slate-100');
        header.classList.add('bg-transparent', 'border-transparent');
        
        // Switch to light logo
        logoLight.classList.remove('hidden');
        logoLight.classList.add('block');
        logoDark.classList.remove('block');
        logoDark.classList.add('hidden');
        
        // Change navigation text colors to light
        navLinks.forEach(link => {
          link.classList.add('text-white', 'hover:text-teal-300');
          link.classList.remove('text-slate-800', 'hover:text-teal-700');
        });
      }
    };
    
    // Run once on load to set initial state
    handleScroll();
    
    // Add scroll event listener
    window.addEventListener('scroll', handleScroll);
    
    // Clean up event listeners on page navigation
    return () => {
      window.removeEventListener('scroll', handleScroll);
    };
  });
</script>

<style>
  /* Add explicit support for backdrop-filter */
  .backdrop-blur-md {
    -webkit-backdrop-filter: blur(12px);
    backdrop-filter: blur(12px);
  }
</style>